{"version":3,"sources":["components/Bar.js","components/Form.js","algorithms/helpers.js","algorithms/bubbleSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","App.js","index.js"],"names":["Bar","style","height","length","backgroundColor","colorKey","className","Form","formLabel","values","labels","currentValue","onChange","FormControl","FormLabel","RadioGroup","value","map","index","FormControlLabel","key","control","Radio","label","swap","array","indexA","indexB","temp","insertStep","arrayNew","position","arraySteps","currentStep","slice","splice","push","bubbleSort","colorSteps","i","j","Array","fill","merge","arrayA","arrayB","shift","updateColor","concat","start","end","mergeSort","mid","Math","floor","quickSort","A","B","C","middleValue","sort","indexOf","pickPivot","pivot","bigIndex","max","App","state","timeouts","algorithm","barCount","delay","ALGO_SET","generateSteps","steps","setState","stepBack","clearTimeouts","stepForward","changeAlgorithm","event","target","clearColorKey","changeBarCount","generateBars","changeDelay","parseInt","forEach","timeout","clearTimeout","blankKey","barsTemp","random","this","setTimeout","playButton","barsDiv","IconButton","onClick","Pause","color","RotateLeft","setTimeouts","PlayArrow","SkipPrevious","SkipNext","e","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fee1d9c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Bar.css\"\r\n\r\nfunction Bar({ length, colorKey }) {\r\n  const COLOR_SET = [\"grey\", \"orange\", \"green\"];\r\n\r\n  let color = COLOR_SET[colorKey];\r\n\r\n  let style = {\r\n    height: length,\r\n    backgroundColor: color,\r\n  }\r\n\r\n  return (\r\n    <div className=\"bar\" style={style} ></div>\r\n  )\r\n}\r\n\r\nexport default Bar;","import React from 'react';\r\nimport { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup } from '@material-ui/core';\r\n\r\nexport default function Form({ formLabel, values, labels, currentValue, onChange }) {\r\n  return (\r\n    <div className=\"card container-small\">\r\n      <FormControl>\r\n        <FormLabel>{formLabel}</FormLabel>\r\n        <RadioGroup value={currentValue} onChange={onChange}>\r\n          {values.map((value, index) => {\r\n            return (<FormControlLabel\r\n              key={`${value}_${index}`}\r\n              value={values[index]}\r\n              control={<Radio />}\r\n              label={labels[index]} />);\r\n          })}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","\r\nexport function swap(array, indexA, indexB) {\r\n  let temp = array[indexA];\r\n  array[indexA] = array[indexB];\r\n  array[indexB] = temp;\r\n  return array;\r\n}\r\n\r\nexport function insertStep(arrayNew, position, arraySteps) {\r\n  let currentStep = arraySteps[arraySteps.length - 1].slice();\r\n  currentStep.splice(position, arrayNew.length, ...arrayNew);\r\n  arraySteps.push(currentStep);\r\n}","import { swap } from './helpers';\r\n\r\nconst bubbleSort = (array, position, arraySteps, colorSteps) => {\r\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n\r\n  for (let i = 0; i < array.length - 1; i++) {\r\n    for (let j = 0; j < array.length - i - 1; j++) {\r\n      if (array[j] > array[j + 1]) {\r\n        array = swap(array, j, j + 1);\r\n      }\r\n      arraySteps.push(array.slice());\r\n      colorKey[j] = 1;\r\n      colorKey[j + 1] = 1;\r\n      colorSteps.push(colorKey.slice());\r\n      colorKey[j] = 0;\r\n      colorKey[j + 1] = 0;\r\n    }\r\n    colorKey[array.length - 1 - i] = 2;\r\n    arraySteps.push(array.slice());\r\n    colorSteps.push(colorKey.slice());\r\n  }\r\n\r\n  // Remaining bars become green\r\n  colorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\r\n  return;\r\n}\r\n\r\nexport default bubbleSort;","import { insertStep } from './helpers';\r\n\r\nfunction mergeSort(array, position, arraySteps, colorSteps) {\r\n  if (array.length === 1) return array;\r\n  let mid = Math.floor(array.length / 2);\r\n\r\n  // Split and work recursively\r\n  let arrayA = mergeSort(array.slice(0, mid), position, arraySteps, colorSteps);\r\n  let arrayB = mergeSort(array.slice(mid), position + mid, arraySteps, colorSteps);\r\n\r\n  let arrayNew = merge(arrayA, arrayB, position, arraySteps, colorSteps);\r\n  arraySteps.push(arraySteps[arraySteps.length - 1].slice());\r\n  colorSteps.push(colorSteps[colorSteps.length - 1].fill(arrayNew.length === arraySteps[0].length ? 2 : 0));\r\n  return arrayNew;\r\n}\r\n\r\nconst merge = (arrayA, arrayB, position, arraySteps, colorSteps) => {\r\n  let arrayNew = [];\r\n  let A = 0;\r\n  let B = 0;\r\n\r\n  while (arrayA.length > 0 && arrayB.length > 0) {\r\n    if (arrayA[A] < arrayB[B]) {\r\n      arrayNew.push(arrayA.shift());\r\n      insertStep(arrayNew, position, arraySteps);\r\n    } else {\r\n      arrayNew.push(arrayB.shift());\r\n      insertStep(arrayNew, position, arraySteps);\r\n    }\r\n    updateColor(position, colorSteps, arrayNew.length - 1, [], []);\r\n  }\r\n\r\n  // concatenate remaining values\r\n\r\n  if (arrayA.length !== 0 || arrayB.length !== 0) {\r\n    updateColor(position, colorSteps, arrayNew.length, arrayA, arrayB);\r\n    arrayNew = arrayNew.concat(arrayA);\r\n    arrayNew = arrayNew.concat(arrayB)\r\n    insertStep(arrayNew, position, arraySteps);\r\n  }\r\n\r\n  return arrayNew;\r\n}\r\n\r\nfunction updateColor(position, colorSteps, start, arrayA, arrayB) {\r\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n  let end = position + start + arrayA.length + arrayB.length;\r\n  start = start + position;\r\n\r\n  if (end === start) {\r\n    colorKey.fill(1, start, end + 1);\r\n  } else {\r\n    colorKey.fill(1, start, end);\r\n  }\r\n  colorSteps.push(colorKey);\r\n}\r\n\r\nexport default mergeSort;","import { swap, insertStep } from './helpers';\r\n\r\nconst quickSort = (array, position, arraySteps, colorSteps) => {\r\n  if (array.length < 2) {\r\n    insertStep(array, position, arraySteps);\r\n\r\n    let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n    colorKey[position] = 2;\r\n    colorSteps.push(colorKey);\r\n    return;\r\n  }\r\n\r\n  // pick median of three numbers as pivot and sent it to back\r\n  swap(array, pickPivot(array), array.length - 1);\r\n  insertStep(array, position, arraySteps);\r\n  colorSteps.push(colorSteps[colorSteps.length - 1].slice());\r\n\r\n  let pivot = array[array.length - 1];\r\n  let A = 0;\r\n  let B = array.length - 1;\r\n\r\n  // swap small value from right with big value from left\r\n  while (A < B) {\r\n    while (array[A] < pivot) {\r\n      insertStep(array, position, arraySteps);\r\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\r\n      colorKey[position + A] = 1;\r\n      colorKey[position + B] = 1;\r\n      colorSteps.push(colorKey);\r\n      A++;\r\n    }\r\n    while (array[B] >= pivot) {\r\n      insertStep(array, position, arraySteps);\r\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\r\n      colorKey[position + A] = 1;\r\n      colorKey[position + B] = 1;\r\n      colorSteps.push(colorKey);\r\n      B--;\r\n    }\r\n    if (A < B) {\r\n      swap(array, A, B);\r\n      insertStep(array, position, arraySteps);\r\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\r\n      colorKey[position + A] = 1;\r\n      colorKey[position + B] = 1;\r\n      colorSteps.push(colorKey);\r\n    }\r\n  }\r\n\r\n  // swap big value with pivot\r\n  let bigIndex = Math.max(A, B);\r\n\r\n  swap(array, bigIndex, array.length - 1);\r\n  insertStep(array, position, arraySteps);\r\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n  colorKey[position + bigIndex] = 2;\r\n  colorSteps.push(colorKey);\r\n\r\n  // recurse on two halves\r\n  quickSort(array.slice(0, A), position, arraySteps, colorSteps);\r\n  quickSort(array.slice(A + 1), position + A + 1, arraySteps, colorSteps);\r\n\r\n  return;\r\n}\r\n\r\nfunction pickPivot(array) {\r\n  let A = array[0];\r\n  let B = array[Math.floor(array.length / 2)];\r\n  let C = array[array.length - 1];\r\n\r\n  let middleValue = [A, B, C].sort()[1];\r\n  let middleIndex = array.indexOf(middleValue);\r\n\r\n  return middleIndex;\r\n}\r\n\r\nexport default quickSort;","import React from 'react';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { PlayArrow, Pause, SkipPrevious, SkipNext, RotateLeft } from '@material-ui/icons';\r\nimport Bar from './components/Bar';\r\nimport Form from './components/Form';\r\n\r\n// style\r\nimport './App.css';\r\n\r\n// algorithms\r\nimport bubbleSort from './algorithms/bubbleSort';\r\nimport mergeSort from './algorithms/mergeSort';\r\nimport quickSort from './algorithms/quickSort';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    array: [],\r\n    colorKey: [],\r\n    arraySteps: [],\r\n    colorSteps: [],\r\n    currentStep: 0,\r\n    timeouts: [],\r\n    algorithm: 'Bubble Sort',\r\n    barCount: 10,\r\n    delay: 200,\r\n  }\r\n\r\n  ALGO_SET = {\r\n    'Bubble Sort': bubbleSort,\r\n    'Merge Sort': mergeSort,\r\n    'Quick Sort': quickSort,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.generateBars();\r\n  }\r\n\r\n  generateSteps = () => {\r\n    let array = this.state.array.slice();\r\n    let steps = this.state.arraySteps.slice();\r\n    let colorSteps = this.state.colorSteps.slice();\r\n\r\n    this.ALGO_SET[this.state.algorithm](array, 0, steps, colorSteps);\r\n\r\n    this.setState({\r\n      arraySteps: steps,\r\n      colorSteps: colorSteps,\r\n    });\r\n  }\r\n\r\n  setTimeouts() {\r\n    let steps = this.state.arraySteps;\r\n    let colorSteps = this.state.colorSteps;\r\n\r\n    this.clearTimeouts();\r\n    let timeouts = [];\r\n    let i = 0;\r\n\r\n    while (i < steps.length - this.state.currentStep) {\r\n      let timeout = setTimeout(() => {\r\n        let currentStep = this.state.currentStep;\r\n        this.setState({\r\n          array: steps[currentStep],\r\n          colorKey: colorSteps[currentStep],\r\n          currentStep: currentStep + 1,\r\n        });\r\n      }, this.state.delay * (i));\r\n      timeouts.push(timeout);\r\n      i++;\r\n    }\r\n\r\n    this.setState({\r\n      timeouts: timeouts,\r\n    });\r\n  }\r\n\r\n  stepBack = () => {\r\n    if (this.state.currentStep === 0) return;\r\n    this.clearTimeouts();\r\n\r\n    let currentStep = this.state.currentStep - 1;\r\n    this.setState({\r\n      array: this.state.arraySteps[currentStep],\r\n      colorKey: this.state.colorSteps[currentStep],\r\n      currentStep: currentStep,\r\n    });\r\n  }\r\n\r\n  stepForward = () => {\r\n    if (this.state.currentStep >= this.state.arraySteps.length - 1) return;\r\n    this.clearTimeouts();\r\n\r\n    let currentStep = this.state.currentStep + 1;\r\n    this.setState({\r\n      array: this.state.arraySteps[currentStep],\r\n      colorKey: this.state.colorSteps[currentStep],\r\n      currentStep: currentStep,\r\n    });\r\n  }\r\n\r\n  changeAlgorithm = (event) => {\r\n    this.setState({\r\n      algorithm: event.target.value,\r\n      currentStep: 0,\r\n      arraySteps: [this.state.arraySteps[this.state.currentStep === 0 ? 0 : this.state.currentStep - 1]],\r\n    }, () => this.generateSteps());\r\n    this.clearTimeouts();\r\n    this.clearColorKey();\r\n  };\r\n\r\n  changeBarCount = (barCount) => {\r\n    this.setState({ barCount: barCount }, () => this.generateBars());\r\n  }\r\n\r\n  changeDelay = (event) => {\r\n    this.clearTimeouts();\r\n    this.setState({\r\n      delay: parseInt(event.target.value),\r\n    });\r\n  };\r\n\r\n  clearTimeouts = () => {\r\n    this.state.timeouts.forEach(timeout => clearTimeout(timeout));\r\n    this.setState({\r\n      timeouts: [],\r\n    })\r\n  }\r\n\r\n  clearColorKey = () => {\r\n    let blankKey = new Array(parseInt(this.state.barCount)).fill(0);\r\n    this.setState({\r\n      colorKey: blankKey,\r\n      colorSteps: [blankKey],\r\n    });\r\n  }\r\n\r\n  generateBars = () => {\r\n    this.clearTimeouts();\r\n    this.clearColorKey();\r\n\r\n    let barCount = parseInt(this.state.barCount);\r\n    let barsTemp = [];\r\n\r\n    for (let i = 0; i < barCount; i++) {\r\n      barsTemp.push(Math.floor(Math.random() * 90) + 10);\r\n    }\r\n\r\n    this.setState({\r\n      array: barsTemp,\r\n      arraySteps: [barsTemp],\r\n      barCount: barCount,\r\n      currentStep: 0,\r\n    }, () => this.generateSteps());\r\n  }\r\n\r\n  render() {\r\n    let barsDiv = this.state.array.map((value, index) => <Bar\r\n      key={index}\r\n      length={value}\r\n      colorKey={this.state.colorKey[index]}\r\n    />);\r\n    let playButton;\r\n\r\n    // Set player controls\r\n    if (this.state.timeouts.length !== 0 && this.state.currentStep !== this.state.arraySteps.length) {\r\n      playButton = (\r\n        <IconButton onClick={() => this.clearTimeouts()} >\r\n          <Pause />\r\n        </IconButton>\r\n      );\r\n    } else if (this.state.currentStep === this.state.arraySteps.length) {\r\n      playButton = (\r\n        <IconButton color=\"secondary\" onClick={() => this.generateBars()} >\r\n          <RotateLeft />\r\n        </IconButton>\r\n      )\r\n    } else {\r\n      playButton = (\r\n        <IconButton color=\"secondary\" onClick={() => this.setTimeouts()} >\r\n          <PlayArrow />\r\n        </IconButton>);\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <section className=\"bars container card\">\r\n          {barsDiv}\r\n        </section>\r\n\r\n        <section className=\"container-small\">\r\n          <IconButton onClick={() => this.generateBars()} >\r\n            <RotateLeft />\r\n          </IconButton>\r\n          <IconButton onClick={this.stepBack} >\r\n            <SkipPrevious />\r\n          </IconButton>\r\n          {playButton}\r\n          <IconButton onClick={this.stepForward} >\r\n            <SkipNext />\r\n          </IconButton>\r\n          <IconButton />\r\n        </section>\r\n\r\n        <section className=\"controls container-small\">\r\n          <Form\r\n            formLabel=\"Algorithm\"\r\n            values={['Bubble Sort', 'Merge Sort', 'Quick Sort']}\r\n            labels={['Bubble Sort', 'Merge Sort', 'Quick Sort']}\r\n            currentValue={this.state.algorithm}\r\n            onChange={this.changeAlgorithm}\r\n          />\r\n\r\n          <Form\r\n            formLabel=\"Array size\"\r\n            values={[10, 25, 50]}\r\n            labels={['10 items', '25 items', '50 items']}\r\n            currentValue={this.state.barCount}\r\n            onChange={e => this.changeBarCount(e.target.value)}\r\n          />\r\n\r\n          <Form\r\n            formLabel=\"Speed\"\r\n            values={[200, 100, 50]}\r\n            labels={['1x', '2x', '4x']}\r\n            currentValue={this.state.delay}\r\n            onChange={this.changeDelay}\r\n          />\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}